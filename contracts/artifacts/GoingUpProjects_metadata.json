{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "AcceptProjectInvitation",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "activatedBy",
						"type": "address"
					}
				],
				"name": "Activate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "changedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newAddMemberPrice",
						"type": "uint256"
					}
				],
				"name": "AddMemberPriceChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "setBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "targetAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "overridePrice",
						"type": "uint256"
					}
				],
				"name": "AddMemberPriceOverrideSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "allowedBy",
						"type": "address"
					}
				],
				"name": "AllowMembersToEdit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "Create",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "deactivatedBy",
						"type": "address"
					}
				],
				"name": "Deactivate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "allowedBy",
						"type": "address"
					}
				],
				"name": "DisallowMembersToEdit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "DisinviteMember",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "changedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newFreeMembers",
						"type": "uint256"
					}
				],
				"name": "FreeMembersChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "InviteMember",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "LeaveProject",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "addedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "ManuallyAddMember",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "removedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "memberRemoved",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "RemoveMember",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "setAsAchievedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "SetMemberGoalAsAchieved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "setAsVerifiedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "SetMemberRewardAsVerified",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "setBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "key",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					}
				],
				"name": "SetProjectExtraData",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "setBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "SetProjectMemberExtraData",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "setBy",
						"type": "address"
					}
				],
				"name": "SetProjectPrivate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "setBy",
						"type": "address"
					}
				],
				"name": "SetProjectPublic",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "reviewedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int8",
						"name": "score",
						"type": "int8"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "comments",
						"type": "string"
					}
				],
				"name": "SubmitProjectReview",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "TransferProjectOwnership",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "updater",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "Update",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "acceptProjectInvitation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "activate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "addMemberPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "addMemberPriceOverrides",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "admins",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "allowMembersToEdit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "started",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ended",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "primaryUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "tags",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "isPrivate",
						"type": "bool"
					}
				],
				"name": "create",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "deactivate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "disallowMembersToEdit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "disinviteMember",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "extraData",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "freeMembers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "getPendingInvites",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "getPendingInvitesByAddress",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "getProjectMembers",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "getProjectsByAddress",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "role",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "goal",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "rewardData",
						"type": "string"
					}
				],
				"name": "inviteMember",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "addressToCheck",
						"type": "address"
					}
				],
				"name": "isAddressInvitedToProject",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "leaveProject",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "role",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "goal",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "rewardData",
						"type": "string"
					}
				],
				"name": "manuallyAddMember",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "price",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "projectMemberMapping",
				"outputs": [
					{
						"internalType": "string",
						"name": "role",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "goal",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "rewardData",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "goalAchieved",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "rewardVerified",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "extraData",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "projects",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "started",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ended",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "primaryUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "tags",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "allowMembersToEdit",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isPrivate",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "removeMember",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newAddMemberPrice",
						"type": "uint256"
					}
				],
				"name": "setAddMemberPrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "targetAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "overridePrice",
						"type": "uint256"
					}
				],
				"name": "setAddMemberPriceOverride",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "targetAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isAdmin",
						"type": "bool"
					}
				],
				"name": "setAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newFreeMembers",
						"type": "uint256"
					}
				],
				"name": "setFreeMembers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "setMemberGoalAsAchieved",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "setMemberRewardAsVerified",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "setPrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "value",
						"type": "string"
					}
				],
				"name": "setProjectExtraData",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "data",
						"type": "string"
					}
				],
				"name": "setProjectMemberExtraData",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "setProjectPrivate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "setProjectPublic",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "int8",
						"name": "score",
						"type": "int8"
					},
					{
						"internalType": "string",
						"name": "comments",
						"type": "string"
					}
				],
				"name": "submitProjectReview",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "transferProjectOwnership",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "started",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ended",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "primaryUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "tags",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "isPrivate",
						"type": "bool"
					}
				],
				"name": "update",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "withdrawERC1155",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawERC20",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenID",
						"type": "uint256"
					}
				],
				"name": "withdrawERC721",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Mark Ibanez",
			"events": {
				"AcceptProjectInvitation(uint256,address)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"Activate(uint256,address)": {
					"params": {
						"activatedBy": "Address that activated the project",
						"projectId": "Project ID"
					}
				},
				"AddMemberPriceChanged(address,uint256)": {
					"params": {
						"changedBy": "Address that changed addMemberPrice",
						"newAddMemberPrice": "New value for addMemberPrice"
					}
				},
				"AddMemberPriceOverrideSet(address,address,uint256)": {
					"params": {
						"overridePrice": "New override price for adding members",
						"setBy": "Address that set the override price",
						"targetAddress": "Target address to set override price for"
					}
				},
				"AllowMembersToEdit(uint256,address)": {
					"params": {
						"allowedBy": "Current owner address allowing edits by members",
						"projectId": "Project ID"
					}
				},
				"Create(address,uint256)": {
					"params": {
						"creator": "Project creator",
						"projectId": "Generated id of the created project"
					}
				},
				"Deactivate(uint256,address)": {
					"params": {
						"deactivatedBy": "Address that activated the project",
						"projectId": "Project ID"
					}
				},
				"DisallowMembersToEdit(uint256,address)": {
					"params": {
						"allowedBy": "Current owner address allowing edits by members",
						"projectId": "Project ID"
					}
				},
				"DisinviteMember(uint256,address,address)": {
					"params": {
						"from": "Authorized address issuing the invitation",
						"projectId": "Project ID",
						"to": "Address to disinvite"
					}
				},
				"FreeMembersChanged(address,uint256)": {
					"params": {
						"changedBy": "Address that changed freeMembers",
						"newFreeMembers": "New value for freeMembers"
					}
				},
				"InviteMember(uint256,address,address)": {
					"params": {
						"from": "Authorized address issuing the invitation",
						"projectId": "Project ID",
						"to": "Address invited to become a member of the project"
					}
				},
				"LeaveProject(uint256,address,string)": {
					"params": {
						"member": "Member address",
						"projectId": "Project ID",
						"reason": "Reason for leaving project"
					}
				},
				"ManuallyAddMember(uint256,address,address)": {
					"params": {
						"addedBy": "Address who adds the project member",
						"member": "Member address added to project",
						"projectId": "Project ID"
					}
				},
				"RemoveMember(uint256,address,address,string)": {
					"params": {
						"memberRemoved": "Member address removed from project",
						"projectId": "Project ID",
						"reason": "Reason why member was removed",
						"removedBy": "Remover address"
					}
				},
				"SetMemberGoalAsAchieved(uint256,address,address)": {
					"params": {
						"member": "Member address",
						"projectId": "Project ID",
						"setAsAchievedBy": "Authorized address setting the member's goal as achieved"
					}
				},
				"SetMemberRewardAsVerified(uint256,address,address)": {
					"params": {
						"member": "Member address",
						"projectId": "Project ID",
						"setAsVerifiedBy": "Authorized address setting the member's reward as verified"
					}
				},
				"SetProjectExtraData(uint256,address,string,string)": {
					"params": {
						"key": "Key for extra data",
						"projectId": "Project ID",
						"setBy": "Authorized address adding extra data",
						"value": "Value for extra data"
					}
				},
				"SetProjectMemberExtraData(uint256,address,address)": {
					"params": {
						"member": "Member address",
						"projectId": "Project ID",
						"setBy": "Authorized address adding extra data"
					}
				},
				"SetProjectPrivate(uint256,address)": {
					"params": {
						"projectId": "Project ID",
						"setBy": "Address that set the project to private"
					}
				},
				"SetProjectPublic(uint256,address)": {
					"params": {
						"projectId": "Project ID",
						"setBy": "Address that set the project to public"
					}
				},
				"SubmitProjectReview(uint256,address,int8,string)": {
					"params": {
						"comments": "Comments",
						"projectId": "Project ID",
						"reviewedBy": "Authorized address adding score and/or comment",
						"score": "Score (-5 to +5)"
					}
				},
				"TransferProjectOwnership(uint256,address,address)": {
					"params": {
						"from": "Current project owner",
						"projectId": "Project ID",
						"to": "New project owner"
					}
				},
				"Update(address,uint256)": {
					"params": {
						"projectId": "Generated id of the updated project",
						"updater": "Project creator"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"acceptProjectInvitation(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"activate(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"allowMembersToEdit(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"create(string,string,uint256,uint256,string,string,bool)": {
					"params": {
						"description": "Project description",
						"ended": "Project ended (Unix timestamp, set to zero if you do not want to set any value)",
						"name": "Project name",
						"primaryUrl": "Project primary url",
						"started": "Project start (Unix timestamp, set to zero if you do not want to set any value)",
						"tags": "Project tags"
					}
				},
				"deactivate(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"disallowMembersToEdit(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"disinviteMember(uint256,address)": {
					"params": {
						"member": "Address to disinvite from project",
						"projectId": "Project ID"
					}
				},
				"getPendingInvites(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"getPendingInvitesByAddress(address)": {
					"params": {
						"member": "Address to get project ids invited to"
					}
				},
				"getProjectMembers(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"getProjectsByAddress(address)": {
					"params": {
						"member": "Member address"
					}
				},
				"inviteMember(uint256,address,string,string,string)": {
					"params": {
						"member": "Address to invite to become a member of the project",
						"projectId": "Project ID"
					}
				},
				"isAddressInvitedToProject(uint256,address)": {
					"params": {
						"addressToCheck": "Address to check if invited to project",
						"projectId": "Project ID"
					}
				},
				"leaveProject(uint256,string)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"manuallyAddMember(uint256,address,string,string,string)": {
					"params": {
						"goal": "Goal for project member",
						"member": "Member address to add to project",
						"projectId": "Project ID",
						"role": "Role in project"
					}
				},
				"removeMember(uint256,address,string)": {
					"params": {
						"member": "Member address to remove",
						"projectId": "Project ID",
						"reason": "Reason why member is to be removed"
					}
				},
				"setAddMemberPrice(uint256)": {
					"params": {
						"newAddMemberPrice": "New default price for adding members"
					}
				},
				"setAddMemberPriceOverride(address,uint256)": {
					"params": {
						"overridePrice": "New override price for adding members",
						"targetAddress": "Target address to set override price"
					}
				},
				"setAdmin(address,bool)": {
					"params": {
						"isAdmin": "Admin flag to set (true means address is admin, false mean address is not admin)",
						"targetAddress": "Target address to set admin flag"
					}
				},
				"setFreeMembers(uint256)": {
					"params": {
						"newFreeMembers": "New number of members that can be added for free"
					}
				},
				"setMemberGoalAsAchieved(uint256,address)": {
					"params": {
						"member": "Member address",
						"projectId": "Project ID"
					}
				},
				"setMemberRewardAsVerified(uint256,address)": {
					"params": {
						"member": "Member address",
						"projectId": "Project ID"
					}
				},
				"setPrice(uint256)": {
					"params": {
						"newPrice": "New price for creating and updating projects"
					}
				},
				"setProjectExtraData(uint256,string,string)": {
					"params": {
						"key": "Extra data key",
						"projectId": "Project ID",
						"value": "Extra data value"
					}
				},
				"setProjectMemberExtraData(uint256,address,string)": {
					"params": {
						"data": "Extra data string",
						"member": "Member address",
						"projectId": "Project ID"
					}
				},
				"setProjectPrivate(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"setProjectPublic(uint256)": {
					"params": {
						"projectId": "Project ID"
					}
				},
				"submitProjectReview(uint256,int8,string)": {
					"params": {
						"comments": "Comments",
						"projectId": "Project ID",
						"score": "Score (-5 to +5)"
					}
				},
				"transferOwnership(address)": {
					"params": {
						"newOwner": "New contract owner address"
					}
				},
				"transferProjectOwnership(uint256,address)": {
					"params": {
						"projectId": "Project ID",
						"to": "Address to set as new owner of project"
					}
				},
				"update(uint256,string,string,uint256,uint256,string,string,bool)": {
					"params": {
						"description": "Project description",
						"ended": "Project ended (Unix timestamp, set to zero if you do not want to set any value)",
						"name": "Project name",
						"primaryUrl": "Project primary url",
						"projectId": "Project ID",
						"started": "Project start (Unix timestamp, set to zero if you do not want to set any value)",
						"tags": "Project tags"
					}
				},
				"withdrawERC1155(address,uint256,uint256,bytes)": {
					"params": {
						"tokenAddress": "Address of ERC1155 contract",
						"tokenID": "Token ID to withdraw"
					}
				},
				"withdrawERC20(address,uint256)": {
					"params": {
						"amount": "Amount to transfer",
						"tokenAddress": "Address of ERC20 contract"
					}
				},
				"withdrawERC721(address,uint256)": {
					"params": {
						"tokenAddress": "Address of ERC721 contract",
						"tokenID": "Token ID to withdraw"
					}
				}
			},
			"title": "GoingUP Platform Projects Smart Contract",
			"version": 1
		},
		"userdoc": {
			"events": {
				"AcceptProjectInvitation(uint256,address)": {
					"notice": "This event is emitted when a member address accepts invitation to be a project member"
				},
				"Activate(uint256,address)": {
					"notice": "This event is emitted when project is activated"
				},
				"AddMemberPriceChanged(address,uint256)": {
					"notice": "This event is emitted when addMemberPrice is changed"
				},
				"AddMemberPriceOverrideSet(address,address,uint256)": {
					"notice": "This event is emitted when add member price override is set"
				},
				"AllowMembersToEdit(uint256,address)": {
					"notice": "This event is emitted when project owner allows members to edit project"
				},
				"Create(address,uint256)": {
					"notice": "This event is emitted when a project is created"
				},
				"Deactivate(uint256,address)": {
					"notice": "This event is emitted when project is deactivated"
				},
				"DisallowMembersToEdit(uint256,address)": {
					"notice": "This event is emitted when project owner disallows members to edit project"
				},
				"DisinviteMember(uint256,address,address)": {
					"notice": "This event is emitted when an authorized address disinvites a pending invite"
				},
				"FreeMembersChanged(address,uint256)": {
					"notice": "This event is emitted when freeMembers is changed"
				},
				"InviteMember(uint256,address,address)": {
					"notice": "This event is emitted when an authorized address invites an address to be a project member"
				},
				"LeaveProject(uint256,address,string)": {
					"notice": "This event is emitted when a member leaves a project"
				},
				"ManuallyAddMember(uint256,address,address)": {
					"notice": "This event is emitted when an contract owner or admin manually adds project members"
				},
				"RemoveMember(uint256,address,address,string)": {
					"notice": "This event is emitted when authorized address removes a member from project"
				},
				"SetMemberGoalAsAchieved(uint256,address,address)": {
					"notice": "This event is emitted when a project owner sets a member's goal as achieved"
				},
				"SetMemberRewardAsVerified(uint256,address,address)": {
					"notice": "This event is emitted when an admin address sets a member's reward as verified"
				},
				"SetProjectExtraData(uint256,address,string,string)": {
					"notice": "This event is emitted when an authorized address sets project extra data"
				},
				"SetProjectMemberExtraData(uint256,address,address)": {
					"notice": "This event is emitted when an authorized address sets project member's extra data"
				},
				"SetProjectPrivate(uint256,address)": {
					"notice": "This event is emitted when project is set to private"
				},
				"SetProjectPublic(uint256,address)": {
					"notice": "This event is emitted when project is set to public"
				},
				"SubmitProjectReview(uint256,address,int8,string)": {
					"notice": "This event is emitted when a score and/or comment is added to a project"
				},
				"TransferProjectOwnership(uint256,address,address)": {
					"notice": "This event is emitted when project ownership is transferred"
				},
				"Update(address,uint256)": {
					"notice": "This event is emitted when a project is updated"
				}
			},
			"kind": "user",
			"methods": {
				"acceptProjectInvitation(uint256)": {
					"notice": "Accept invitation to become a member of the project"
				},
				"activate(uint256)": {
					"notice": "Activate project and allow updates (only accessible to project owner)"
				},
				"addMemberPrice()": {
					"notice": "Default price for adding members above the freeMembers threshold (0.1 MATIC)"
				},
				"addMemberPriceOverrides(address)": {
					"notice": "Override price mapping for adding members"
				},
				"admins(address)": {
					"notice": "Admin addresses mapping (true if admin, false if not admin)"
				},
				"allowMembersToEdit(uint256)": {
					"notice": "Allows members to edit updateable portions of project (only accessible to project owner)"
				},
				"create(string,string,uint256,uint256,string,string,bool)": {
					"notice": "Create a project"
				},
				"deactivate(uint256)": {
					"notice": "Activate project and allow updates (only accessible to project owner)"
				},
				"disallowMembersToEdit(uint256)": {
					"notice": "Allows members to edit updateable portions of project (only accessible to project owner)"
				},
				"disinviteMember(uint256,address)": {
					"notice": "Disinvite member from project"
				},
				"extraData(uint256,string)": {
					"notice": "Project extra data storage"
				},
				"freeMembers()": {
					"notice": "Number of members that can be added for free (just pay for gas)"
				},
				"getPendingInvites(uint256)": {
					"notice": "Get pending invites for project"
				},
				"getPendingInvitesByAddress(address)": {
					"notice": "Get project ids invited to by address"
				},
				"getProjectMembers(uint256)": {
					"notice": "Get project members"
				},
				"getProjectsByAddress(address)": {
					"notice": "Get project ids member is a member of"
				},
				"inviteMember(uint256,address,string,string,string)": {
					"notice": "Invite a member to project"
				},
				"isAddressInvitedToProject(uint256,address)": {
					"notice": "isAddressInvitedToProject returns true if address is invited to project"
				},
				"leaveProject(uint256,string)": {
					"notice": "Leave project"
				},
				"manuallyAddMember(uint256,address,string,string,string)": {
					"notice": "Manually add member to project (only accessible to contract owner or admin)"
				},
				"owner()": {
					"notice": "Owner addres"
				},
				"price()": {
					"notice": "Price for various transactions"
				},
				"projects(uint256)": {
					"notice": "Projects mapping"
				},
				"removeMember(uint256,address,string)": {
					"notice": "Remove member from project (only accessible to authorized addresses)"
				},
				"setAddMemberPrice(uint256)": {
					"notice": "Sets the default price for adding members (accessible only by admins)"
				},
				"setAddMemberPriceOverride(address,uint256)": {
					"notice": "Sets the override price for adding members (accessible only by admins)"
				},
				"setAdmin(address,bool)": {
					"notice": "Sets the admin flag for address"
				},
				"setFreeMembers(uint256)": {
					"notice": "Sets the number of members that can be added for free (accessible only by admins)"
				},
				"setMemberGoalAsAchieved(uint256,address)": {
					"notice": "Set member's goal as achieved"
				},
				"setMemberRewardAsVerified(uint256,address)": {
					"notice": "Set member's reward as verified"
				},
				"setPrice(uint256)": {
					"notice": "Sets the price for creating and updating projects"
				},
				"setProjectExtraData(uint256,string,string)": {
					"notice": "Set project extra data"
				},
				"setProjectMemberExtraData(uint256,address,string)": {
					"notice": "Set project member's extra data"
				},
				"setProjectPrivate(uint256)": {
					"notice": "Set project to private (only accessible to authorized addresses)"
				},
				"setProjectPublic(uint256)": {
					"notice": "Set project to public (only accessible to authorized addresses)"
				},
				"submitProjectReview(uint256,int8,string)": {
					"notice": "Add score and/or comment to project"
				},
				"transferOwnership(address)": {
					"notice": "Transfer ownership of contract"
				},
				"transferProjectOwnership(uint256,address)": {
					"notice": "Transfer project ownership"
				},
				"update(uint256,string,string,uint256,uint256,string,string,bool)": {
					"notice": "Update a project"
				},
				"withdrawERC1155(address,uint256,uint256,bytes)": {
					"notice": "Withdraw ERC1155 token"
				},
				"withdrawERC20(address,uint256)": {
					"notice": "Withdraw ERC20 tokens"
				},
				"withdrawERC721(address,uint256)": {
					"notice": "Withdraw ERC721 token"
				},
				"withdrawFunds()": {
					"notice": "Withdraw native tokens (matic)"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/GoingUpProjects.sol": "GoingUpProjects"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
			"keccak256": "0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9",
			"license": "MIT",
			"urls": [
				"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5",
				"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba",
			"license": "MIT",
			"urls": [
				"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0",
				"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723",
			"license": "MIT",
			"urls": [
				"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d",
				"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv"
			]
		},
		"contracts/GoingUpProjects.sol": {
			"keccak256": "0x1ad4c851d47deeb24723d60cb74c605bca3db2c333b16d94b7f3be133b595169",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://4c0ea49af9dbbca1c35c8adde697b21446ec799bf22ed95c72374cf1202fde66",
				"dweb:/ipfs/QmVvkmUWeA2EP7U4DVo8mgccoA2C4evnSL9f2r6AvXJEDe"
			]
		}
	},
	"version": 1
}