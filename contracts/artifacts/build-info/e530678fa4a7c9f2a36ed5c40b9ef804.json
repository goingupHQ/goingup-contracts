{
	"id": "e530678fa4a7c9f2a36ed5c40b9ef804",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GoingUpProjects.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.14;\r\n\r\n/// @title GoingUP Platform Projects Smart Contract\r\n/// @author Mark Ibanez\r\ncontract GoingUpProjects {\r\n    struct Project {\r\n        uint256 id;\r\n        string name;\r\n        string description;\r\n        uint started;\r\n        uint ended;\r\n        string primaryUrl;\r\n        string[] tags;\r\n        address owner;\r\n        address[] members;\r\n        bool active;\r\n    }\r\n\r\n    constructor () {        \r\n        owner = msg.sender;\r\n    }\r\n\r\n    uint256 private idCounter = 1;\r\n\r\n    address public owner;\r\n    mapping(address => bool) public admins;\r\n    modifier onlyAdmin {\r\n        require(owner == msg.sender || admins[msg.sender], \"not admin\");\r\n        _;\r\n    }\r\n    /// @notice Sets the admin flag for address\r\n    /// @param targetAddress Target address to set admin flag\r\n    /// @param isAdmin Admin flag to set (true means address is admin, false mean address is not admin)\r\n    function setAdmin(address targetAddress, bool isAdmin) public onlyAdmin {\r\n        admins[targetAddress] = isAdmin;\r\n    }\r\n\r\n\r\n    uint256 public price = 1 * 10 ** 16; // default price is 0.01 matic\r\n\r\n    /// @notice Sets the price for creating and updating projects\r\n    /// @param newPrice New price for creating and updating projects\r\n    function setPrice(uint256 newPrice) public onlyAdmin {\r\n        price = newPrice;\r\n    }\r\n\r\n\r\n    // function create(string memory name, string memory description, uint started, uint ended, string memory primaryUrl, string[] memory tags) public {\r\n\r\n    // }\r\n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GoingUpProjects.sol": {
				"GoingUpProjects": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "admins",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isAdmin",
									"type": "bool"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Mark Ibanez",
						"kind": "dev",
						"methods": {
							"setAdmin(address,bool)": {
								"params": {
									"isAdmin": "Admin flag to set (true means address is admin, false mean address is not admin)",
									"targetAddress": "Target address to set admin flag"
								}
							},
							"setPrice(uint256)": {
								"params": {
									"newPrice": "New price for creating and updating projects"
								}
							}
						},
						"title": "GoingUP Platform Projects Smart Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GoingUpProjects.sol\":146:1570  contract GoingUpProjects {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GoingUpProjects.sol\":547:548  1 */\n  0x01\n    /* \"contracts/GoingUpProjects.sol\":519:548  uint256 private idCounter = 1 */\n  0x00\n  sstore\n    /* \"contracts/GoingUpProjects.sol\":1120:1132  1 * 10 ** 16 */\n  0x2386f26fc10000\n    /* \"contracts/GoingUpProjects.sol\":1097:1132  uint256 public price = 1 * 10 ** 16 */\n  0x03\n  sstore\n    /* \"contracts/GoingUpProjects.sol\":451:511  constructor () {        ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/GoingUpProjects.sol\":485:490  owner */\n  0x01\n    /* \"contracts/GoingUpProjects.sol\":485:503  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/GoingUpProjects.sol\":493:503  msg.sender */\n  caller\n    /* \"contracts/GoingUpProjects.sol\":485:503  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/GoingUpProjects.sol\":146:1570  contract GoingUpProjects {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GoingUpProjects.sol\":146:1570  contract GoingUpProjects {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x429b62e5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4b0bddd2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x91b7f5ed\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GoingUpProjects.sol\":584:622  mapping(address => bool) public admins */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":548:562   */\n      swap1\n      iszero\n        /* \"#utility.yul\":541:563   */\n      iszero\n        /* \"#utility.yul\":523:564   */\n      dup2\n      mstore\n        /* \"#utility.yul\":511:513   */\n      0x20\n        /* \"#utility.yul\":496:514   */\n      add\n        /* \"contracts/GoingUpProjects.sol\":584:622  mapping(address => bool) public admins */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GoingUpProjects.sol\":965:1087  function setAdmin(address targetAddress, bool isAdmin) public onlyAdmin {... */\n    tag_4:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/GoingUpProjects.sol\":557:577  address public owner */\n    tag_5:\n      sload(0x01)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1091:1123   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1073:1124   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1046:1064   */\n      add\n        /* \"contracts/GoingUpProjects.sol\":557:577  address public owner */\n      tag_12\n        /* \"#utility.yul\":927:1130   */\n      jump\n        /* \"contracts/GoingUpProjects.sol\":1309:1397  function setPrice(uint256 newPrice) public onlyAdmin {... */\n    tag_6:\n      tag_14\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"contracts/GoingUpProjects.sol\":1097:1132  uint256 public price = 1 * 10 ** 16 */\n    tag_7:\n      tag_26\n      sload(0x03)\n      dup2\n      jump\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"contracts/GoingUpProjects.sol\":1097:1132  uint256 public price = 1 * 10 ** 16 */\n      tag_12\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"contracts/GoingUpProjects.sol\":965:1087  function setAdmin(address targetAddress, bool isAdmin) public onlyAdmin {... */\n    tag_17:\n        /* \"contracts/GoingUpProjects.sol\":667:672  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/GoingUpProjects.sol\":676:686  msg.sender */\n      caller\n        /* \"contracts/GoingUpProjects.sol\":667:686  owner == msg.sender */\n      eq\n      dup1\n        /* \"contracts/GoingUpProjects.sol\":667:708  owner == msg.sender || admins[msg.sender] */\n      tag_31\n      jumpi\n      pop\n        /* \"contracts/GoingUpProjects.sol\":697:707  msg.sender */\n      caller\n        /* \"contracts/GoingUpProjects.sol\":690:708  admins[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GoingUpProjects.sol\":690:696  admins */\n      0x02\n        /* \"contracts/GoingUpProjects.sol\":690:708  admins[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/GoingUpProjects.sol\":667:708  owner == msg.sender || admins[msg.sender] */\n    tag_31:\n        /* \"contracts/GoingUpProjects.sol\":659:722  require(owner == msg.sender || admins[msg.sender], \"not admin\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"contracts/GoingUpProjects.sol\":659:722  require(owner == msg.sender || admins[msg.sender], \"not admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1686:1707   */\n      mstore\n        /* \"#utility.yul\":1743:1744   */\n      0x09\n        /* \"#utility.yul\":1723:1741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1716:1745   */\n      mstore\n      shl(0xb9, 0x3737ba1030b236b4b7)\n        /* \"#utility.yul\":1761:1779   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1754:1793   */\n      mstore\n        /* \"#utility.yul\":1810:1828   */\n      0x64\n      add\n        /* \"contracts/GoingUpProjects.sol\":659:722  require(owner == msg.sender || admins[msg.sender], \"not admin\") */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GoingUpProjects.sol\":1048:1069  admins[targetAddress] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GoingUpProjects.sol\":1048:1054  admins */\n      0x02\n        /* \"contracts/GoingUpProjects.sol\":1048:1069  admins[targetAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/GoingUpProjects.sol\":1048:1079  admins[targetAddress] = isAdmin */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/GoingUpProjects.sol\":965:1087  function setAdmin(address targetAddress, bool isAdmin) public onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/GoingUpProjects.sol\":1309:1397  function setPrice(uint256 newPrice) public onlyAdmin {... */\n    tag_25:\n        /* \"contracts/GoingUpProjects.sol\":667:672  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/GoingUpProjects.sol\":676:686  msg.sender */\n      caller\n        /* \"contracts/GoingUpProjects.sol\":667:686  owner == msg.sender */\n      eq\n      dup1\n        /* \"contracts/GoingUpProjects.sol\":667:708  owner == msg.sender || admins[msg.sender] */\n      tag_37\n      jumpi\n      pop\n        /* \"contracts/GoingUpProjects.sol\":697:707  msg.sender */\n      caller\n        /* \"contracts/GoingUpProjects.sol\":690:708  admins[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GoingUpProjects.sol\":690:696  admins */\n      0x02\n        /* \"contracts/GoingUpProjects.sol\":690:708  admins[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/GoingUpProjects.sol\":667:708  owner == msg.sender || admins[msg.sender] */\n    tag_37:\n        /* \"contracts/GoingUpProjects.sol\":659:722  require(owner == msg.sender || admins[msg.sender], \"not admin\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"contracts/GoingUpProjects.sol\":659:722  require(owner == msg.sender || admins[msg.sender], \"not admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1686:1707   */\n      mstore\n        /* \"#utility.yul\":1743:1744   */\n      0x09\n        /* \"#utility.yul\":1723:1741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1716:1745   */\n      mstore\n      shl(0xb9, 0x3737ba1030b236b4b7)\n        /* \"#utility.yul\":1761:1779   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1754:1793   */\n      mstore\n        /* \"#utility.yul\":1810:1828   */\n      0x64\n      add\n        /* \"contracts/GoingUpProjects.sol\":659:722  require(owner == msg.sender || admins[msg.sender], \"not admin\") */\n      tag_33\n        /* \"#utility.yul\":1502:1834   */\n      jump\n        /* \"contracts/GoingUpProjects.sol\":659:722  require(owner == msg.sender || admins[msg.sender], \"not admin\") */\n    tag_38:\n        /* \"contracts/GoingUpProjects.sol\":1373:1378  price */\n      0x03\n        /* \"contracts/GoingUpProjects.sol\":1373:1389  price = newPrice */\n      sstore\n        /* \"contracts/GoingUpProjects.sol\":1309:1397  function setPrice(uint256 newPrice) public onlyAdmin {... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_41:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_44:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_46:\n        /* \"#utility.yul\":343:372   */\n      tag_47\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_41\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":575:922   */\n    tag_16:\n        /* \"#utility.yul\":640:646   */\n      0x00\n        /* \"#utility.yul\":648:654   */\n      dup1\n        /* \"#utility.yul\":701:703   */\n      0x40\n        /* \"#utility.yul\":689:698   */\n      dup4\n        /* \"#utility.yul\":680:687   */\n      dup6\n        /* \"#utility.yul\":676:699   */\n      sub\n        /* \"#utility.yul\":672:704   */\n      slt\n        /* \"#utility.yul\":669:721   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":717:718   */\n      0x00\n        /* \"#utility.yul\":714:715   */\n      dup1\n        /* \"#utility.yul\":707:719   */\n      revert\n        /* \"#utility.yul\":669:721   */\n    tag_50:\n        /* \"#utility.yul\":740:769   */\n      tag_51\n        /* \"#utility.yul\":759:768   */\n      dup4\n        /* \"#utility.yul\":740:769   */\n      tag_41\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":730:769   */\n      swap2\n      pop\n        /* \"#utility.yul\":819:821   */\n      0x20\n        /* \"#utility.yul\":808:817   */\n      dup4\n        /* \"#utility.yul\":804:822   */\n      add\n        /* \"#utility.yul\":791:823   */\n      calldataload\n        /* \"#utility.yul\":866:871   */\n      dup1\n        /* \"#utility.yul\":859:872   */\n      iszero\n        /* \"#utility.yul\":852:873   */\n      iszero\n        /* \"#utility.yul\":845:850   */\n      dup2\n        /* \"#utility.yul\":842:874   */\n      eq\n        /* \"#utility.yul\":832:892   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":888:889   */\n      0x00\n        /* \"#utility.yul\":885:886   */\n      dup1\n        /* \"#utility.yul\":878:890   */\n      revert\n        /* \"#utility.yul\":832:892   */\n    tag_52:\n        /* \"#utility.yul\":911:916   */\n      dup1\n        /* \"#utility.yul\":901:916   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":575:922   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1315   */\n    tag_24:\n        /* \"#utility.yul\":1194:1200   */\n      0x00\n        /* \"#utility.yul\":1247:1249   */\n      0x20\n        /* \"#utility.yul\":1235:1244   */\n      dup3\n        /* \"#utility.yul\":1226:1233   */\n      dup5\n        /* \"#utility.yul\":1222:1245   */\n      sub\n        /* \"#utility.yul\":1218:1250   */\n      slt\n        /* \"#utility.yul\":1215:1267   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1263:1264   */\n      0x00\n        /* \"#utility.yul\":1260:1261   */\n      dup1\n        /* \"#utility.yul\":1253:1265   */\n      revert\n        /* \"#utility.yul\":1215:1267   */\n    tag_55:\n      pop\n        /* \"#utility.yul\":1286:1309   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1135:1315   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122058d49fb3fbaceaf28932acf3a1f5bb324782f7a88a94634dc450331355fef57d64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_34": {
									"entryPoint": null,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001600055662386f26fc1000060035534801561002057600080fd5b50600180546001600160a01b031916331790556102bc806100426000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063429b62e51461005c5780634b0bddd2146100945780638da5cb5b146100a957806391b7f5ed146100d4578063a035b1fe146100e7575b600080fd5b61007f61006a36600461020f565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100a76100a2366004610231565b6100fe565b005b6001546100bc906001600160a01b031681565b6040516001600160a01b03909116815260200161008b565b6100a76100e236600461026d565b61018e565b6100f060035481565b60405190815260200161008b565b6001546001600160a01b031633148061012657503360009081526002602052604090205460ff165b6101635760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b6001546001600160a01b03163314806101b657503360009081526002602052604090205460ff165b6101ee5760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b604482015260640161015a565b600355565b80356001600160a01b038116811461020a57600080fd5b919050565b60006020828403121561022157600080fd5b61022a826101f3565b9392505050565b6000806040838503121561024457600080fd5b61024d836101f3565b91506020830135801515811461026257600080fd5b809150509250929050565b60006020828403121561027f57600080fd5b503591905056fea264697066735822122058d49fb3fbaceaf28932acf3a1f5bb324782f7a88a94634dc450331355fef57d64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2BC DUP1 PUSH2 0x42 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x4B0BDDD2 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x231 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST PUSH2 0xA7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xF0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x126 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x163 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1B6 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A DUP3 PUSH2 0x1F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D DUP4 PUSH2 0x1F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xD4 SWAP16 0xB3 0xFB 0xAC 0xEA CALLCODE DUP10 ORIGIN 0xAC RETURN LOG1 CREATE2 0xBB ORIGIN SELFBALANCE DUP3 0xF7 0xA8 DUP11 SWAP5 PUSH4 0x4DC45033 SGT SSTORE INVALID CREATE2 PUSH30 0x64736F6C634300080E003300000000000000000000000000000000000000 ",
							"sourceMap": "146:1424:0:-:0;;;547:1;519:29;;1120:12;1097:35;;451:60;;;;;;;;;-1:-1:-1;485:5:0;:18;;-1:-1:-1;;;;;;485:18:0;493:10;485:18;;;146:1424;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@admins_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_39": {
									"entryPoint": null,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAdmin_77": {
									"entryPoint": 254,
									"id": 77,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPrice_97": {
									"entryPoint": 398,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1836:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "478:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "488:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "496:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "488:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "530:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "555:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "548:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "548:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "541:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "447:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "458:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "469:4:1",
														"type": ""
													}
												],
												"src": "383:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "659:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "705:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "714:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "717:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "680:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "689:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "676:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "701:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "672:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:32:1"
															},
															"nodeType": "YulIf",
															"src": "669:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "730:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "759:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "740:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "730:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "778:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "808:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "819:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "804:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "791:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "782:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "876:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "885:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "888:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "878:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "878:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "878:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "845:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "866:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "859:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "859:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "852:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "852:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "842:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "842:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:40:1"
															},
															"nodeType": "YulIf",
															"src": "832:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "617:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "628:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "640:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "648:6:1",
														"type": ""
													}
												],
												"src": "575:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1038:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1038:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1080:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1095:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1111:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1116:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1107:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1107:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1120:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1103:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1103:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1073:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "997:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1008:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1019:4:1",
														"type": ""
													}
												],
												"src": "927:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1205:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1251:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1260:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1263:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1253:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1253:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1226:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1235:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1222:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:32:1"
															},
															"nodeType": "YulIf",
															"src": "1215:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1299:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1286:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1171:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1182:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1194:6:1",
														"type": ""
													}
												],
												"src": "1135:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1421:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1390:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1412:4:1",
														"type": ""
													}
												],
												"src": "1320:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1693:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1723:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1743:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1716:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1776:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1761:18:1"
																	},
																	{
																		"hexValue": "6e6f742061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1781:11:1",
																		"type": "",
																		"value": "not admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1754:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1802:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1802:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1667:4:1",
														"type": ""
													}
												],
												"src": "1502:332:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not admin\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063429b62e51461005c5780634b0bddd2146100945780638da5cb5b146100a957806391b7f5ed146100d4578063a035b1fe146100e7575b600080fd5b61007f61006a36600461020f565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100a76100a2366004610231565b6100fe565b005b6001546100bc906001600160a01b031681565b6040516001600160a01b03909116815260200161008b565b6100a76100e236600461026d565b61018e565b6100f060035481565b60405190815260200161008b565b6001546001600160a01b031633148061012657503360009081526002602052604090205460ff165b6101635760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b6001546001600160a01b03163314806101b657503360009081526002602052604090205460ff165b6101ee5760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b604482015260640161015a565b600355565b80356001600160a01b038116811461020a57600080fd5b919050565b60006020828403121561022157600080fd5b61022a826101f3565b9392505050565b6000806040838503121561024457600080fd5b61024d836101f3565b91506020830135801515811461026257600080fd5b809150509250929050565b60006020828403121561027f57600080fd5b503591905056fea264697066735822122058d49fb3fbaceaf28932acf3a1f5bb324782f7a88a94634dc450331355fef57d64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x4B0BDDD2 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x231 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST PUSH2 0xA7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xF0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x126 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x163 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1B6 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A DUP3 PUSH2 0x1F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D DUP4 PUSH2 0x1F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xD4 SWAP16 0xB3 0xFB 0xAC 0xEA CALLCODE DUP10 ORIGIN 0xAC RETURN LOG1 CREATE2 0xBB ORIGIN SELFBALANCE DUP3 0xF7 0xA8 DUP11 SWAP5 PUSH4 0x4DC45033 SGT SSTORE INVALID CREATE2 PUSH30 0x64736F6C634300080E003300000000000000000000000000000000000000 ",
							"sourceMap": "146:1424:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;548:14:1;;541:22;523:41;;511:2;496:18;584:38:0;;;;;;;;965:122;;;;;;:::i;:::-;;:::i;:::-;;557:20;;;;;-1:-1:-1;;;;;557:20:0;;;;;;-1:-1:-1;;;;;1091:32:1;;;1073:51;;1061:2;1046:18;557:20:0;927:203:1;1309:88:0;;;;;;:::i;:::-;;:::i;1097:35::-;;;;;;;;;1466:25:1;;;1454:2;1439:18;1097:35:0;1320:177:1;965:122:0;667:5;;-1:-1:-1;;;;;667:5:0;676:10;667:19;;:41;;-1:-1:-1;697:10:0;690:18;;;;:6;:18;;;;;;;;667:41;659:63;;;;-1:-1:-1;;;659:63:0;;1704:2:1;659:63:0;;;1686:21:1;1743:1;1723:18;;;1716:29;-1:-1:-1;;;1761:18:1;;;1754:39;1810:18;;659:63:0;;;;;;;;;-1:-1:-1;;;;;1048:21:0;;;::::1;;::::0;;;:6:::1;:21;::::0;;;;:31;;-1:-1:-1;;1048:31:0::1;::::0;::::1;;::::0;;;::::1;::::0;;965:122::o;1309:88::-;667:5;;-1:-1:-1;;;;;667:5:0;676:10;667:19;;:41;;-1:-1:-1;697:10:0;690:18;;;;:6;:18;;;;;;;;667:41;659:63;;;;-1:-1:-1;;;659:63:0;;1704:2:1;659:63:0;;;1686:21:1;1743:1;1723:18;;;1716:29;-1:-1:-1;;;1761:18:1;;;1754:39;1810:18;;659:63:0;1502:332:1;659:63:0;1373:5:::1;:16:::0;1309:88::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;575:347::-;640:6;648;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;740:29;759:9;740:29;:::i;:::-;730:39;;819:2;808:9;804:18;791:32;866:5;859:13;852:21;845:5;842:32;832:60;;888:1;885;878:12;832:60;911:5;901:15;;;575:347;;;;;:::o;1135:180::-;1194:6;1247:2;1235:9;1226:7;1222:23;1218:32;1215:52;;;1263:1;1260;1253:12;1215:52;-1:-1:-1;1286:23:1;;1135:180;-1:-1:-1;1135:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "140000",
								"executionCost": "68630",
								"totalCost": "208630"
							},
							"external": {
								"admins(address)": "2498",
								"owner()": "2359",
								"price()": "2361",
								"setAdmin(address,bool)": "29030",
								"setPrice(uint256)": "26704"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 547,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 548,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1132,
									"name": "PUSH",
									"source": 0,
									"value": "2386F26FC10000"
								},
								{
									"begin": 1097,
									"end": 1132,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1097,
									"end": 1132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 451,
									"end": 511,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 451,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 451,
									"end": 511,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 451,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 511,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 451,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 451,
									"end": 511,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 451,
									"end": 511,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 485,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 485,
									"end": 503,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 485,
									"end": 503,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 493,
									"end": 503,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 485,
									"end": 503,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 485,
									"end": 503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 485,
									"end": 503,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 1570,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058d49fb3fbaceaf28932acf3a1f5bb324782f7a88a94634dc450331355fef57d64736f6c634300080e0033",
									".code": [
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "429B62E5"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "4B0BDDD2"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "91B7F5ED"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "A035B1FE"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 1570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 541,
											"end": 563,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 523,
											"end": 564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 523,
											"end": 564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 511,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 584,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 622,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 965,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 965,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 577,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 557,
											"end": 577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 577,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 577,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 927,
											"end": 1130,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1309,
											"end": 1397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1309,
											"end": 1397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 667,
											"end": 672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 676,
											"end": 686,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 667,
											"end": 686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 667,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 667,
											"end": 708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 697,
											"end": 707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 667,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 659,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 722,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1048,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 1087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1309,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 667,
											"end": 672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 676,
											"end": 686,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 667,
											"end": 686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 667,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 667,
											"end": 708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 697,
											"end": 707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 690,
											"end": 708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 667,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 659,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 659,
											"end": 722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1502,
											"end": 1834,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 722,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 659,
											"end": 722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 922,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 575,
											"end": 922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 680,
											"end": 687,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 676,
											"end": 699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 672,
											"end": 704,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 721,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 669,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 669,
											"end": 721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 717,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 707,
											"end": 719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 721,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 669,
											"end": 721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 740,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 740,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 740,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 769,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 740,
											"end": 769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 819,
											"end": 821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 804,
											"end": 822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 823,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 859,
											"end": 872,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 852,
											"end": 873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 845,
											"end": 850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 874,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 832,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 832,
											"end": 892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 888,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 878,
											"end": 890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 832,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 832,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 901,
											"end": 916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 575,
											"end": 922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 575,
											"end": 922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 575,
											"end": 922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1135,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1250,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1215,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1309,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1135,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/GoingUpProjects.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admins(address)": "429b62e5",
							"owner()": "8da5cb5b",
							"price()": "a035b1fe",
							"setAdmin(address,bool)": "4b0bddd2",
							"setPrice(uint256)": "91b7f5ed"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAdmin\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mark Ibanez\",\"kind\":\"dev\",\"methods\":{\"setAdmin(address,bool)\":{\"params\":{\"isAdmin\":\"Admin flag to set (true means address is admin, false mean address is not admin)\",\"targetAddress\":\"Target address to set admin flag\"}},\"setPrice(uint256)\":{\"params\":{\"newPrice\":\"New price for creating and updating projects\"}}},\"title\":\"GoingUP Platform Projects Smart Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setAdmin(address,bool)\":{\"notice\":\"Sets the admin flag for address\"},\"setPrice(uint256)\":{\"notice\":\"Sets the price for creating and updating projects\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GoingUpProjects.sol\":\"GoingUpProjects\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GoingUpProjects.sol\":{\"keccak256\":\"0x2583dbdc58e8186907457b59160eb590d30b4762e4a51c0742f72427651f58c2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a4a829913ffa90837ab42e259d0128b1a6db9c60861838c137345137097bbdc\",\"dweb:/ipfs/QmPPMtp3aJ6Dn3Ng6DA1JcK9EyQAMASA4pRSLxofY8Dpqf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "contracts/GoingUpProjects.sol:GoingUpProjects",
								"label": "idCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 39,
								"contract": "contracts/GoingUpProjects.sol:GoingUpProjects",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 43,
								"contract": "contracts/GoingUpProjects.sol:GoingUpProjects",
								"label": "admins",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 84,
								"contract": "contracts/GoingUpProjects.sol:GoingUpProjects",
								"label": "price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setAdmin(address,bool)": {
								"notice": "Sets the admin flag for address"
							},
							"setPrice(uint256)": {
								"notice": "Sets the price for creating and updating projects"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/GoingUpProjects.sol": {
				"ast": {
					"absolutePath": "contracts/GoingUpProjects.sol",
					"exportedSymbols": {
						"GoingUpProjects": [
							98
						]
					},
					"id": 99,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GoingUpProjects",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "68:78:0",
								"text": "@title GoingUP Platform Projects Smart Contract\n @author Mark Ibanez"
							},
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "GoingUpProjects",
							"nameLocation": "155:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "GoingUpProjects.Project",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "212:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "204:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "204:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "232:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "225:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 5,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "225:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "254:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "247:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 7,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "247:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "started",
											"nameLocation": "281:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "276:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "276:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "ended",
											"nameLocation": "304:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "299:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "299:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "primaryUrl",
											"nameLocation": "327:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "320:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 13,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "320:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "tags",
											"nameLocation": "357:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "348:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											},
											"typeName": {
												"baseType": {
													"id": 15,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"id": 16,
												"nodeType": "ArrayTypeName",
												"src": "348:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
													"typeString": "string[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "380:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "372:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 18,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "372:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "406:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "396:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ArrayTypeName",
												"src": "396:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "429:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "424:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 23,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "424:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Project",
									"nameLocation": "185:7:0",
									"nodeType": "StructDefinition",
									"scope": 98,
									"src": "178:265:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "466:45:0",
										"statements": [
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "485:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "493:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "493:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "485:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "485:18:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:0:0"
									},
									"scope": 98,
									"src": "451:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "idCounter",
									"nameLocation": "535:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "519:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "519:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "547:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 39,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "572:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "557:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 38,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "429b62e5",
									"id": 43,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "616:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "584:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "592:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "584:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 41,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "603:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "648:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 46,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "667:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 47,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "676:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "676:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "667:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 50,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "690:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 53,
																"indexExpression": {
																	"expression": {
																		"id": 51,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "697:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "697:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "690:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "667:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742061646d696e",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "710:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283",
																"typeString": "literal_string \"not admin\""
															},
															"value": "not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283",
																"typeString": "literal_string \"not admin\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "659:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "659:63:0"
											},
											{
												"id": 58,
												"nodeType": "PlaceholderStatement",
												"src": "733:1:0"
											}
										]
									},
									"id": 60,
									"name": "onlyAdmin",
									"nameLocation": "638:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:0:0"
									},
									"src": "629:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1037:50:0",
										"statements": [
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 70,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1048:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 72,
														"indexExpression": {
															"id": 71,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1055:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1048:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 73,
														"name": "isAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1048:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1048:31:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "748:211:0",
										"text": "@notice Sets the admin flag for address\n @param targetAddress Target address to set admin flag\n @param isAdmin Admin flag to set (true means address is admin, false mean address is not admin)"
									},
									"functionSelector": "4b0bddd2",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 68,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 67,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "1027:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1027:9:0"
										}
									],
									"name": "setAdmin",
									"nameLocation": "974:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "991:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "983:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "isAdmin",
												"nameLocation": "1011:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1006:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:37:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1037:0:0"
									},
									"scope": 98,
									"src": "965:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 84,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "1112:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "1097:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 78,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1097:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 83,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 79,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1120:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_10000000000000000_by_1",
												"typeString": "int_const 10000000000000000"
											},
											"id": 82,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 80,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1124:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3136",
												"id": 81,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1130:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_16_by_1",
													"typeString": "int_const 16"
												},
												"value": "16"
											},
											"src": "1124:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000000000_by_1",
												"typeString": "int_const 10000000000000000"
											}
										},
										"src": "1120:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1362:35:0",
										"statements": [
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1373:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "1381:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1373:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1373:16:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1172:131:0",
										"text": "@notice Sets the price for creating and updating projects\n @param newPrice New price for creating and updating projects"
									},
									"functionSelector": "91b7f5ed",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 90,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 89,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "1352:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1352:9:0"
										}
									],
									"name": "setPrice",
									"nameLocation": "1318:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "1335:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1327:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:18:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:0:0"
									},
									"scope": 98,
									"src": "1309:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 99,
							"src": "146:1424:0",
							"usedErrors": []
						}
					],
					"src": "40:1531:0"
				},
				"id": 0
			}
		}
	}
}